package localization

import (
	"database/sql"
	"encoding/json"
	"fmt"
	"io/fs"
	"os"
	"path/filepath"
	"strings"
)

type Localizer struct {
	db           *sql.DB
	translations map[string]map[string]string
}

func NewLocalizer(db *sql.DB) *Localizer {
	l := &Localizer{
		db:           db,
		translations: make(map[string]map[string]string),
	}

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –∏–∑ JSON —Ñ–∞–π–ª–æ–≤
	l.loadTranslations()
	return l
}

func (l *Localizer) loadTranslations() {
	// –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º –ø–µ—Ä–µ–≤–æ–¥–æ–≤
	localesPath := "./locales"

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞
	if _, err := os.Stat(localesPath); os.IsNotExist(err) {
		// –ï—Å–ª–∏ –ø–∞–ø–∫–∏ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã
		l.loadDefaultTranslations()
		return
	}

	// –ß–∏—Ç–∞–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ locales
	filepath.WalkDir(localesPath, func(path string, d fs.DirEntry, err error) error {
		if err != nil {
			return err
		}

		if !d.IsDir() && strings.HasSuffix(path, ".json") {
			// –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ —è–∑—ã–∫–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
			langCode := strings.TrimSuffix(d.Name(), ".json")

			// –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
			data, err := os.ReadFile(path)
			if err != nil {
				fmt.Printf("Error reading %s: %v\n", path, err)
				return nil
			}

			// –ü–∞—Ä—Å–∏–º JSON
			var translations map[string]string
			if err := json.Unmarshal(data, &translations); err != nil {
				fmt.Printf("Error parsing %s: %v\n", path, err)
				return nil
			}

			l.translations[langCode] = translations
			fmt.Printf("Loaded translations for %s (%d keys)\n", langCode, len(translations))
		}

		return nil
	})
}

func (l *Localizer) loadDefaultTranslations() {
	// –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ JSON —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
	l.translations = map[string]map[string]string{
		"en": {
			"welcome_message":           "üëã Hi, {name}! Welcome to Language Exchange Bot!\n\nüåü Here you'll find conversation partners for language learning!\n\nüöÄ Let's set up your profile:",
			"choose_native_language":    "üåç Choose your native language:",
			"choose_target_language":    "üìö What language are you learning?",
			"choose_interface_language": "üåê Choose interface language:",
			"choose_interests":          "üéØ Choose your interests (you can select multiple):",
			"profile_completed":         "‚úÖ Great! Your profile is ready!\n\nüîç Starting to search for suitable conversation partners...",
			"language_updated":          "‚úÖ Interface language updated!",
			"interest_added":            "‚úÖ Interest added to your profile!",
			"use_menu_above":            "üëÜ Please use the menu above",
			"unknown_command":           "‚ùì Unknown command. Use /start to begin",
			// –¥–æ–±–∞–≤–ª–µ–Ω–æ:
			"your_status":               "Your status",
			"status":                    "Status",
			"state":                     "State",
			"profile_completion":        "Profile completion",
			"interface_language":        "Interface language",
			"profile_reset":             "Profile reset",
			"native_language_confirmed": "Native language",
			"target_language_confirmed": "Learning language",

			"profile_summary_title":   "üë§ Your profile",
			"profile_field_native":    "Native language",
			"profile_field_target":    "Learning language",
			"profile_field_interests": "Interests",
			"profile_actions":         "What would you like to do?",
			"profile_show":            "üë§ Show profile",
			"profile_reconfigure":     "üîÅ Reconfigure",
			"profile_reset_title":     "‚ôªÔ∏è Reset profile",
			"profile_reset_warning":   "This will clear your languages and interests. Are you sure?",
			"profile_reset_yes":       "‚úÖ Yes, reset",
			"profile_reset_no":        "‚ùå No, keep it",
			"profile_reset_done":      "‚úÖ Profile has been reset. Let's start again!",
		},
		"ru": {
			"welcome_message":           "üëã –ü—Ä–∏–≤–µ—Ç, {name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Language Exchange Bot!\n\nüåü –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤!\n\nüöÄ –î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:",
			"choose_native_language":    "üåç –í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫:",
			"choose_target_language":    "üìö –ö–∞–∫–æ–π —è–∑—ã–∫ —Ç—ã –∏–∑—É—á–∞–µ—à—å?",
			"choose_interface_language": "üåê –í—ã–±–µ—Ä–∏ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:",
			"choose_interests":          "üéØ –í—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ):",
			"profile_completed":         "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≥–æ—Ç–æ–≤!\n\nüîç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤...",
			"language_updated":          "‚úÖ –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω!",
			"interest_added":            "‚úÖ –ò–Ω—Ç–µ—Ä–µ—Å –¥–æ–±–∞–≤–ª–µ–Ω –∫ —Ç–≤–æ–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é!",
			"use_menu_above":            "üëÜ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –≤—ã—à–µ",
			"unknown_command":           "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /start –¥–ª—è –Ω–∞—á–∞–ª–∞",
			// –¥–æ–±–∞–≤–ª–µ–Ω–æ:
			"your_status":               "–¢–≤–æ–π —Å—Ç–∞—Ç—É—Å",
			"status":                    "–°—Ç–∞—Ç—É—Å",
			"state":                     "–°–æ—Å—Ç–æ—è–Ω–∏–µ",
			"profile_completion":        "–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è",
			"interface_language":        "–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
			"profile_reset":             "–°–±—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è",
			"native_language_confirmed": "–†–æ–¥–Ω–æ–π —è–∑—ã–∫",
			"target_language_confirmed": "–ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫",

			"profile_summary_title":   "üë§ –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
			"profile_field_native":    "–†–æ–¥–Ω–æ–π —è–∑—ã–∫",
			"profile_field_target":    "–ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫",
			"profile_field_interests": "–ò–Ω—Ç–µ—Ä–µ—Å—ã",
			"profile_actions":         "–ß—Ç–æ –¥–∞–ª—å—à–µ —Å–¥–µ–ª–∞—Ç—å?",
			"profile_show":            "üë§ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
			"profile_reconfigure":     "üîÅ –ü–µ—Ä–µ–∑–∞–ø–æ–ª–Ω–∏—Ç—å",
			"profile_reset_title":     "‚ôªÔ∏è –°–±—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è",
			"profile_reset_warning":   "–ë—É–¥—É—Ç –æ—á–∏—â–µ–Ω—ã —è–∑—ã–∫–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã. –¢–æ—á–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?",
			"profile_reset_yes":       "‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å",
			"profile_reset_no":        "‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å",
			"profile_reset_done":      "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–±—Ä–æ—à–µ–Ω. –ù–∞—á–Ω—ë–º –∑–∞–Ω–æ–≤–æ!",
		},
	}
	fmt.Println("Loaded default translations")
}

func (l *Localizer) Get(langCode, key string) string {
	if langMap, ok := l.translations[langCode]; ok {
		if text, exists := langMap[key]; exists {
			return text
		}
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	if langMap, ok := l.translations["en"]; ok {
		if text, exists := langMap[key]; exists {
			return text
		}
	}

	return key
}

func (l *Localizer) GetWithParams(langCode, key string, params map[string]string) string {
	text := l.Get(langCode, key)

	// –ó–∞–º–µ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ —Å—Ç–∏–ª–µ {name}
	for k, v := range params {
		placeholder := "{" + k + "}"
		text = strings.ReplaceAll(text, placeholder, v)
	}

	return text
}

func (l *Localizer) GetLanguageName(langCode, interfaceLangCode string) string {
	names := map[string]map[string]string{
		"en": {
			"ru": "Russian", "en": "English", "es": "Spanish", "zh": "Chinese",
		},
		"ru": {
			"ru": "–†—É—Å—Å–∫–∏–π", "en": "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "es": "–ò—Å–ø–∞–Ω—Å–∫–∏–π", "zh": "–ö–∏—Ç–∞–π—Å–∫–∏–π",
		},
		"es": {
			"ru": "Ruso", "en": "Ingl√©s", "es": "Espa√±ol", "zh": "Chino",
		},
		"zh": {
			"ru": "‰øÑËØ≠", "en": "Ëã±ËØ≠", "es": "Ë•øÁè≠ÁâôËØ≠", "zh": "‰∏≠Êñá",
		},
	}

	if langMap, ok := names[interfaceLangCode]; ok {
		if name, exists := langMap[langCode]; exists {
			return name
		}
	}

	return langCode
}

func (l *Localizer) GetInterests(langCode string) (map[int]string, error) {
	interests := map[string]map[int]string{
		"en": {
			1: "üé¨ Movies & TV Shows", 2: "üìö Books & Literature",
			3: "üèÉ Sports & Fitness", 4: "üéµ Music", 5: "üç≥ Cooking & Food",
			6: "‚úàÔ∏è Travel & Culture", 7: "üíª Technology", 8: "üé® Art & Design",
			9: "üéÆ Gaming", 10: "üìñ Education",
		},
		"ru": {
			1: "üé¨ –§–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã", 2: "üìö –ö–Ω–∏–≥–∏ –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
			3: "üèÉ –°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å", 4: "üéµ –ú—É–∑—ã–∫–∞", 5: "üç≥ –ö—É–ª–∏–Ω–∞—Ä–∏—è –∏ –µ–¥–∞",
			6: "‚úàÔ∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–∞", 7: "üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", 8: "üé® –ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –¥–∏–∑–∞–π–Ω",
			9: "üéÆ –ò–≥—Ä—ã", 10: "üìñ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
		},
	}

	if langInterests, ok := interests[langCode]; ok {
		return langInterests, nil
	}

	return interests["en"], nil
}
