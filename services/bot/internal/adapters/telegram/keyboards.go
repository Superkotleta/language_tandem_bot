package telegram

import (
	"fmt"
	"sort"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func (h *TelegramHandler) createLanguageKeyboard(interfaceLang, keyboardType string) tgbotapi.InlineKeyboardMarkup {
	type langOption struct{ code, flag string }
	languages := []langOption{
		{"en", "üá∫üá∏"}, {"ru", "üá∑üá∫"}, {"es", "üá™üá∏"}, {"zh", "üá®üá≥"},
	}

	var buttons [][]tgbotapi.InlineKeyboardButton
	for _, lang := range languages {
		name := h.service.Localizer.GetLanguageName(lang.code, interfaceLang)
		label := fmt.Sprintf("%s %s", lang.flag, name)
		button := tgbotapi.NewInlineKeyboardButtonData(label, fmt.Sprintf("lang_%s_%s", keyboardType, lang.code))
		buttons = append(buttons, []tgbotapi.InlineKeyboardButton{button})
	}
	return tgbotapi.NewInlineKeyboardMarkup(buttons...)
}

func (h *TelegramHandler) createInterestsKeyboard(interests map[int]string, selectedInterests []int) tgbotapi.InlineKeyboardMarkup {
	var buttons [][]tgbotapi.InlineKeyboardButton

	// –°–æ–∑–¥–∞—ë–º –º–∞–ø—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
	selectedMap := make(map[int]bool)
	for _, id := range selectedInterests {
		selectedMap[id] = true
	}

	// –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ID –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
	var sortedIDs []int
	for id := range interests {
		sortedIDs = append(sortedIDs, id)
	}
	sort.Ints(sortedIDs)

	// –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
	for _, id := range sortedIDs {
		name := interests[id]
		var label string
		if selectedMap[id] {
			label = "‚úÖ " + name
		} else {
			label = name
		}

		button := tgbotapi.NewInlineKeyboardButtonData(label, fmt.Sprintf("interest_%d", id))
		buttons = append(buttons, []tgbotapi.InlineKeyboardButton{button})
	}

	// –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –µ—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã - –õ–û–ö–ê–õ–ò–ó–û–í–ê–ù–ù–ê–Ø
	if len(selectedInterests) > 0 {
		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
		continueButton := tgbotapi.NewInlineKeyboardButtonData(
			h.service.Localizer.Get(h.getCurrentInterfaceLanguage(), "interests_continue"),
			"interests_continue",
		)
		buttons = append(buttons, []tgbotapi.InlineKeyboardButton{continueButton})
	}

	return tgbotapi.NewInlineKeyboardMarkup(buttons...)
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
func (h *TelegramHandler) getCurrentInterfaceLanguage() string {
	// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ - –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
	// –∏–ª–∏ —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ handler'–∞
	return "en" // –≤—Ä–µ–º–µ–Ω–Ω–æ
}
